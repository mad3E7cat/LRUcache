task
Лаба 2:
*Реализовать LRU кэш фиксированного размера (количество записей задается в конструкторе) для адресов (адресом является строка, например, “AFFB”). 

Согласно алгоритму LRU после исчерпания размера кэша в начале удаляются записи, которые давно не запрашивались. 

Удобной реализацией такого кэша является список. Если запись запрашивается, то она перемещается в голову списка. Если размер кэша исчерпан, то удаляются записи с конца списка. 

При реализации использовать list для хранения адресов и map для быстрого поиска адреса в списке.



*LruCache(size_t size)
*bool find_and_add(const std::string &address); //возвращает true, если адрес найден в кэше
*operator<< для вывода на экран





* каждому элементу добавить флажок, 3-е значение, этор флаг дает протекцию от удаления. теперь, если мы добавили новый адрес и вышли за пределы размерности кэша, то мы удаляем не последнюю запись, а первую с конца, у которой флаг "0" - первая, которая не защищена от удаления. 












string get();
