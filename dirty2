#include <iostream>
#include <list>
#include <iterator>
#include <string>
#include <map>
using namespace std;
int main()
{
	list<pair<string, int>> list1;
	list<pair<string, int>>::iterator it_lst;
	map< string, int > addressMap;
	int i = 0;
	for(i = 0; i < 11; i++)
	{
		string tmp;
		cout << "Enter address: \n";
		cin >> tmp;
		list1.push_back(pair<string, int>(tmp, i));
	}
	// cout << "Elements: \n";
	// for (auto it = list1.begin(); it != list1.end(); it++)
	// {
	// 	cout << "Address: " << it->first << " Value: " << it->second << "\n";	
	// }
	// cout << "\nFirst element: " << list1.front().first;
	// cout << "\nLast element: " << list1.back().first << "\n";
	//
	for(it_lst = list1.begin(); it_lst != list1.end(); it_lst++)
	{
		addressMap.insert(*it_lst);
	}
	for(auto it = addressMap.begin(); it != addressMap.end(); it++)
	{
		cout << (*it).first << ":" << (*it).second << "\n";
	}
	// auto it_err = addressMap.find("AAAAAAAA");
	// if(it_err != addressMap.end())
	// {
	// 	cout << addressMap.find("AAAAAAAA")->first << ":" << addressMap.find("AAAAAAAA")->second << "\n";
	// }
	// else
	// {
	// 	cout << "Error while adding" << endl;;
	// } 
	cout << "Enter adress and val: ";
	string tmp;
	int val = 0;
	cin >> tmp >> val;
	auto it_err = addressMap.find(tmp);
	if(it_err == addressMap.end())
	{
		addressMap.insert(pair<string, int>(tmp, val));
	}
	else
	{
		cout << "\nThere is already such address..." << endl;
	}
	cout <<"\n";
	for(auto it = addressMap.begin(); it != addressMap.end(); it++)
	{
		cout << (*it).first << ":" << (*it).second << "\n";
	}	
	//
	// cout << "\nAfter changed:\n";
	// for(it_lst = list1.begin(); it_lst != list1.end(); it_lst++)
	// {
	// 	if(*it_lst == "0000000F")
	// 	{
	// 		list1.push_front(*it_lst);
	// 		it_lst = list1.erase(it_lst);
	// 	}
	// }
	// for(it_lst = list1.begin(); it_lst != list1.end(); it_lst++)
	// {
	// 	cout << *it_lst << " ";
	// }
	// cout << "\nFirst element: " << list1.front();
	// cout << "\nLast element: " << list1.back() << "\n";
	return 0;
}	