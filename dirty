#include <iostream>
#include <list>
#include <iterator>
#include <string>
#include <map>
using namespace std;
int main()
{
	// map<string, int> addressMap;
	// list<string> list1;
	// for (int i = 0; i < 11; ++i)
	// {
	// 	string addr;
	// 	cout << "Enter addr: ";
	// 	cin >> addr;
	// 	list1.push_back(addr);
	// }
	// list<string>::iterator it_lst;
	// int i = 0;
	// for (i = 0, it_lst = list1.begin(); i < 11; ++i, it_lst++)
	// {
	// 	addressMap.insert(pair<string, int>(*it_lst, i));
	// }
	list<string> list1;
	for(int i = 0; i < 11; i++)
	{
		string tmp;
		cout << "Enter address: \n";
		cin >> tmp;
		list1.push_back(tmp);
	}
	cout << "Elements: \n";
	copy(list1.begin(), list1.end(), ostream_iterator<string>(cout, " "));
	cout << "\nFirst element: " << list1.front();
	cout << "\nLast element: " << list1.back() << "\n";
	//
	list<string>::iterator it_lst;
	list<pair<string, int>> list2;
	list<pair<string, int>>::iterator it_lst2;
	map< string, int > addressMap;
	map< string, int > addressMap2;	
	int i = 0;
	for(i = 0, it_lst = list1.begin(), it_lst2 = list2.begin(); i < 11; i++, it_lst++, it_lst2++)
	{
		addressMap.insert( pair <string, int>(*it_lst, i) );
		addressMap2.insert(*it_lst2);
	}
	cout << addressMap.at("AAAAAAAA");
	//
	cout << "\nAfter changed:\n";
	for(it_lst = list1.begin(); it_lst != list1.end(); it_lst++)
	{
		if(*it_lst == "0000000F")
		{
			list1.push_front(*it_lst);
			it_lst = list1.erase(it_lst);
		}
	}
	for(it_lst = list1.begin(); it_lst != list1.end(); it_lst++)
	{
		cout << *it_lst << " ";
	}
	// cout << "\nFirst element: " << list1.front();
	// cout << "\nLast element: " << list1.back() << "\n";
	return 0;
}	